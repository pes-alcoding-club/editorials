{"pageProps":{"editorialData":{"editorial":"<p>Tags: Dynamic Programming</p>\n<p>A valid subset contains points that have the following property: if we sort them increasingly by the x-coordinate, they will be sorted decreasingly by the y-coordinate.</p>\n<p>First we sort all points, this way it's guarranteed that the x coordinates are in ascending order, now for a given set of coordinates, we find the number of coordinates before it which have the y coordinate greater than equal to it.</p>\n<p>Hence, to count the total number of subsets, we can come up with the following dynamic programming solution:</p>\n<p>DP[i] = the number of valid subsets such that the point with the greatest x-coordinate is \"i\".\nWe build DP[i] by iterating j along 0 to i - 1, such that DP[i] += DP[j] where j.x &#x3C; i.x and j.y > i.y</p>\n","solutions":{"cpp":"#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\nconst ll mod = 1e9 + 7;\n\nint main(void) {\n    int n;\n    cin >> n;\n\n    auto updateTotal = [&](ll total, ll value) -> ll {\n        // lambda function to update total\n        return (total + value) % mod;\n    };\n\n    vector<pair<int, int>> pointsSet;  // Store all the points here\n    for (int i = 0; i < n; i++) {\n        int x, y;\n        cin >> x >> y;\n        pointsSet.push_back({x, y});\n    }\n    sort(pointsSet.begin(), pointsSet.end());  // Sort points in ascending order\n    vector<ll> dp(n);\n    for (int i = 0; i < n; i++) {\n        ll total = 1;\n        for (int j = 0; j < i; j++) {\n            if (pointsSet[j].second > pointsSet[i].second) {\n                total = updateTotal(total, dp[j]);\n                // Update total if it matches the required condition\n            }\n        }\n        dp[i] = total;\n    }\n    ll ans = 0;\n    for (int i = 0; i < n; i++) {\n        ans = updateTotal(ans, dp[i]);\n        // Find the sum of all the values in the dp array\n    }\n    cout << ans << endl;\n}\n"},"problemData":{"id":"NDMST","title":"Non Dominant Sets","difficulty":"hard","problem_url":"https://www.hackerrank.com/contests/alcoding-summer-challenge-2021/challenges/non-dominant-sets"}}},"__N_SSG":true}