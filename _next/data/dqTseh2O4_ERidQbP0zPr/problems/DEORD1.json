{"pageProps":{"editorialData":{"editorial":"<p>From the question, we see that we need to remove elements in increasing order.\nWe also need to keep a count of the number of indices removed which are less than the next smallest element we need to remove.\nTo do this, we can use a segment tree or a fenwick tree where we keep track of the number of elements we have removed from index 0 to index i.\nWe start by sorting the values of the patience with their index annotated. Then for each index of the new array, we process the number of indices that were removed before the current index. We then mark the current index as having been used.</p>\n<p>The given solution can also be solved using Fenwick trees or Ordered Sets.\nThe editorial contains the Segment Tree approach.</p>\n","solutions":{"cpp":"#include<bits/stdc++.h>\nusing namespace std;\n\nconst int nax = 1e5 + 1;\nvector<int> tree(2 * nax);\n\nvoid update(int idx, int val) {\n    idx += nax;\n\n    while (idx) {\n        tree[idx] += val;\n        idx >>= 1;\n    }\n}\n\nint query(int lhs, int rhs) {\n    lhs += nax;\n    rhs += nax;\n    int ret = 0;\n\n    while (lhs <= rhs) {\n        if (lhs & 1) ret += tree[lhs++];\n        if ((rhs & 1) == 0) ret += tree[rhs--];\n        lhs >>= 1;\n        rhs >>= 1;\n    }\n\n    return ret;\n}\n\nvoid solve(vector<int> a) {\n    int n = a.size();\n    vector<pair<int, int>> pairs;\n\n    for (int i = 0; i < n; i++) {\n        pairs.emplace_back(a[i], i);\n    }\n\n    sort(pairs.begin(), pairs.end());\n\n    for (auto p : pairs) {\n        cout << (p.second - query(0, p.second - 1)) + 1 << \"\\n\";\n        update(p.second, 1);\n    }\n}\n\nint main() {\n    cin.tie(0)->sync_with_stdio(0); // cout << fixed << setprecision(15);\n\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    solve(a);\n\n    return 0;\n}\n"},"problemData":{"id":"DEORD1","title":"Decay Order","difficulty":"hard","problem_url":"https://www.hackerrank.com/contests/alcoding-september-challenge/challenges/decay-order"}}},"__N_SSG":true}